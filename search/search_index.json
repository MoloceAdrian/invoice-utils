{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Invoice-utils Getting Started Testing documentation Installation poetry install Testing poetry run pytest","title":"Home"},{"location":"#invoice-utils","text":"","title":"Invoice-utils"},{"location":"#getting-started","text":"Testing documentation","title":"Getting Started"},{"location":"#installation","text":"poetry install","title":"Installation"},{"location":"#testing","text":"poetry run pytest","title":"Testing"},{"location":"Requirements/","text":"What this is There's a lot of invoicing utils out there which fall short of the promise of easy integration with any other system. This should be a simple rule engine that turns an input json file containing: customer data data about the invoicing entity invoice header data such as the invoice currency or numbering scheme into an output json file containing the invoiced data (amount, details, etc).","title":"Requirements"},{"location":"Requirements/#what-this-is","text":"There's a lot of invoicing utils out there which fall short of the promise of easy integration with any other system. This should be a simple rule engine that turns an input json file containing: customer data data about the invoicing entity invoice header data such as the invoice currency or numbering scheme into an output json file containing the invoiced data (amount, details, etc).","title":"What this is"}]}